AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Dashora Analytics Dashboard SAM Template for serverless backend deployment

  '
Globals:
  Function:
    Timeout: 30
    MemorySize: 256
    Runtime: python3.12
    Architectures:
    - x86_64
    Environment:
      Variables:
        METRICS_TABLE_NAME:
          Ref: DashoraMetricsTable
        DOMAINS_TABLE_NAME:
          Ref: DashoraDomainsTable
        USERS_TABLE_NAME:
          Ref: DashoraUsersTable
        JWT_SECRET:
          Ref: JwtSecret
        STAGE: dev
Parameters:
  JwtSecret:
    Type: String
    Description: Secret key for JWT token validation
    NoEcho: true
Resources:
  DashoraMetricsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: dashora-metrics-api
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: domain_id
        AttributeType: S
      - AttributeName: timestamp
        AttributeType: S
      KeySchema:
      - AttributeName: domain_id
        KeyType: HASH
      - AttributeName: timestamp
        KeyType: RANGE
  DashoraDomainsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: dashora-domains-api
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: user_id
        AttributeType: S
      - AttributeName: domain_id
        AttributeType: S
      KeySchema:
      - AttributeName: user_id
        KeyType: HASH
      - AttributeName: domain_id
        KeyType: RANGE
  DashoraUsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: dashora-users-api
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: user_id
        AttributeType: S
      KeySchema:
      - AttributeName: user_id
        KeyType: HASH
  DashoraWooCommerceFetcher:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: dashora-api-woocommerce-fetcher
      CodeUri: DashoraWooCommerceFetcher
      Handler: lambda_function.lambda_handler
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DashoraDomainsTable
      Events:
        ScheduledFetch:
          Type: Schedule
          Properties:
            Schedule: rate(1 hour)
    Metadata:
      SamResourceId: DashoraWooCommerceFetcher
  DashoraGoogleAnalyticsFetcher:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: dashora-api-ga-fetcher
      CodeUri: DashoraGoogleAnalyticsFetcher
      Handler: lambda_function.lambda_handler
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DashoraDomainsTable
      Events:
        ScheduledFetch:
          Type: Schedule
          Properties:
            Schedule: rate(1 hour)
    Metadata:
      SamResourceId: DashoraGoogleAnalyticsFetcher
  DashoraMetricsProcessor:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: dashora-api-metrics-processor
      CodeUri: DashoraMetricsProcessor
      Handler: lambda_function.lambda_handler
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DashoraDomainsTable
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DashoraMetricsTable
      Events:
        ProcessWooCommerceData:
          Type: CloudWatchEvent
          Properties:
            Pattern:
              source:
              - lambda
              detail-type:
              - Lambda Function Invocation Result - Success
              detail:
                requestContext:
                  functionName:
                  - Ref: DashoraWooCommerceFetcher
        ProcessGAData:
          Type: CloudWatchEvent
          Properties:
            Pattern:
              source:
              - lambda
              detail-type:
              - Lambda Function Invocation Result - Success
              detail:
                requestContext:
                  functionName:
                  - Ref: DashoraGoogleAnalyticsFetcher
    Metadata:
      SamResourceId: DashoraMetricsProcessor
  DashoraApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: dashora-api-handler
      CodeUri: DashoraApiFunction
      Handler: lambda_function.lambda_handler
      Timeout: 60
      Layers:
      - Ref: DashoraDependenciesLayer
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DashoraDomainsTable
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DashoraMetricsTable
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DashoraUsersTable
      Events:
        LoginEndpoint:
          Type: Api
          Properties:
            RestApiId:
              Ref: DashoraApiGateway
            Path: /login
            Method: POST
        DomainsEndpoint:
          Type: Api
          Properties:
            RestApiId:
              Ref: DashoraApiGateway
            Path: /domains
            Method: GET
        AddDomainEndpoint:
          Type: Api
          Properties:
            RestApiId:
              Ref: DashoraApiGateway
            Path: /domains
            Method: POST
        DeleteDomainEndpoint:
          Type: Api
          Properties:
            RestApiId:
              Ref: DashoraApiGateway
            Path: /domains/{domain}
            Method: DELETE
        MetricsEndpoint:
          Type: Api
          Properties:
            RestApiId:
              Ref: DashoraApiGateway
            Path: /metrics/{domain}
            Method: GET
        IntegrationGetEndpoint:
          Type: Api
          Properties:
            RestApiId:
              Ref: DashoraApiGateway
            Path: /domains/{domain}/integrations/{type}
            Method: GET
        IntegrationPostEndpoint:
          Type: Api
          Properties:
            RestApiId:
              Ref: DashoraApiGateway
            Path: /domains/{domain}/integrations/{type}
            Method: POST
        IntegrationDeleteEndpoint:
          Type: Api
          Properties:
            RestApiId:
              Ref: DashoraApiGateway
            Path: /domains/{domain}/integrations/{type}
            Method: DELETE
        TestEndpoint:
          Type: Api
          Properties:
            RestApiId:
              Ref: DashoraApiGateway
            Path: /test
            Method: GET
        DebugEndpoint:
          Type: Api
          Properties:
            RestApiId:
              Ref: DashoraApiGateway
            Path: /debug
            Method: GET
    Metadata:
      SamResourceId: DashoraApiFunction
  DashoraApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowMethods: '''OPTIONS,GET,POST,PUT,DELETE'''
        AllowHeaders: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
        AllowOrigin: '''*'''
      Auth:
        DefaultAuthorizer: NONE
        AddDefaultAuthorizerToCorsPreflight: false
  DashoraDependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: dashora-dependencies
      Description: Dependencies for Dashora API Lambda functions
      ContentUri: ..\..\lambdas
      CompatibleRuntimes:
      - python3.12
      RetentionPolicy: Retain
Outputs:
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value:
      Fn::Sub: https://${DashoraApiGateway}.execute-api.${AWS::Region}.amazonaws.com/prod/
  WooCommerceFetcherArn:
    Description: WooCommerce Fetcher Function ARN
    Value:
      Fn::GetAtt:
      - DashoraWooCommerceFetcher
      - Arn
  GoogleAnalyticsFetcherArn:
    Description: Google Analytics Fetcher Function ARN
    Value:
      Fn::GetAtt:
      - DashoraGoogleAnalyticsFetcher
      - Arn
  MetricsProcessorArn:
    Description: Metrics Processor Function ARN
    Value:
      Fn::GetAtt:
      - DashoraMetricsProcessor
      - Arn
  ApiFunctionArn:
    Description: API Handler Function ARN
    Value:
      Fn::GetAtt:
      - DashoraApiFunction
      - Arn
